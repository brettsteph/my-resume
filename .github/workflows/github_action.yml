# This is a basic workflow to help you get started with Actions

name: Website Upload && CloudFront Invalidation

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

env:
  AWS_S3_BUCKET: ${{secrets.AWS_S3_BUCKET}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job-lint:
  #   # Name the Job
  #   name: Lint Code Base
  #   # Set the agent to run on
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #       with:
  #         # Full git history is needed to get a proper list of changed files within `super-linter`
  #         fetch-depth: 0
  #     ################################
  #     # Run Linter against code base #
  #     ################################
  #     - name: Lint Code Base
  #       uses: github/super-linter/slim@v4
  #       env:
  #         VALIDATE_ALL_CODEBASE: false
  #         DEFAULT_BRANCH: main
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  job-upload-site:
    name: sync website files to s3 bucket and invalidate CloudFront
    if: github.event_name == 'push'
    # needs: job-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-S3-CDN

      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
              
      - name: Sync S3 Bucket
        # run: aws s3 cp . s3://"$AWS_S3_BUCKET" --exclude ".gitignore" --exclude ".git*/*" --exclude ".DS_Store" --follow-symlinks --recursive
        run: aws s3 sync . s3://"$AWS_S3_BUCKET" --exclude ".gitignore" --exclude ".git*/*" --follow-symlinks --delete

      - name: Store Cloudfront Distribution Id in env variable
        id: step_one
        run: |
          DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[*].{id:Id,origin:Origins.Items[0].Id}[?origin=='$AWS_S3_BUCKET'].id" --output text)
          echo "DIST_ID=$DIST_ID" >> "$GITHUB_ENV"
        # echo "$DIST_ID"
      
      - name: Invalidate Cloudfront
        id: step_two
        run: |
          aws cloudfront create-invalidation --distribution-id "$DIST_ID" --paths "/*"
