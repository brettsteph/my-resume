# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.14]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
         node-version: ${{ matrix.node-version }}
      - name: npm install, and test
        run: |
          npm ci
          npm run build --if-present
          npm test -- -u
        env:
          CI: true
      - uses: action/upload-artifact@master
        with:
          name: webpack artifacts
          path: public/

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
    # This workflow contains a single job called "build"
  copy:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Copy package to S3 on AWS
        # You may pin to the exact commit or the version.
        # uses: qualitia-cdev/copy-to-s3@65d0c4cc0563781d3f91328399de26fbe44562b3
        uses: qualitia-cdev/copy-to-s3@0.0.2
        with:
          # AWS ACCESS KEY
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          # AWS SECRET KEY
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          # Region where you want to deploy
          AWS_REGION: 'us-east-1'
          # This is used for copying target source file
          source-dir: ${{secrets.SOURCE_DIR}}
          # This is service name
          service-name: 'Pomodoro' 
          # The directory which is deployed
          target-dir: 'public'
          

